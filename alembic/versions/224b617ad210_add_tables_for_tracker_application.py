"""Add tables for tracker application

Revision ID: 224b617ad210
Revises: 
Create Date: 2021-04-07 20:36:15.263977

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.schema import Sequence, CreateSequence, DropSequence

# revision identifiers, used by Alembic.
revision = "224b617ad210"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute(CreateSequence(Sequence("groups_id_seq")))
    op.create_table(
        "groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    op.execute(CreateSequence(Sequence("merchant_id_seq")))
    op.create_table(
        "merchant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    op.execute(CreateSequence(Sequence("users_id_seq")))
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("phone", sa.String(length=13), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(CreateSequence(Sequence("friends_id_seq")))
    op.create_table(
        "friends",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("friend_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["friend_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(CreateSequence(Sequence("user_group_mapping_id_seq")))
    op.create_table(
        "user_group_mapping",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(CreateSequence(Sequence("user_transactions_id_seq")))
    op.create_table(
        "user_transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("creditor_user_id", sa.Integer(), nullable=False),
        sa.Column("debitor_user_id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("txn_amount", sa.Numeric(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["creditor_user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["debitor_user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(CreateSequence(Sequence("expenses_id_seq")))
    op.create_table(
        "expenses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("txn_amount", sa.Numeric(), nullable=False),
        sa.Column("merchant_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["merchant_id"],
            ["merchant.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(CreateSequence(Sequence("expenses_parties_id_seq")))
    op.create_table(
        "expense_parties",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("expense_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["expense_id"],
            ["expenses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("expense_parties")
    op.drop_table("expenses")
    op.drop_table("user_transactions")
    op.drop_table("user_group_mapping")
    op.drop_table("friends")
    op.drop_table("users")
    op.drop_table("merchant")
    op.drop_table("groups")

    op.execute(DropSequence(Sequence("expense_parties_id_seq")))
    op.execute(DropSequence(Sequence("expenses_id_seq")))
    op.execute(DropSequence(Sequence("user_transactions_id_seq")))
    op.execute(DropSequence(Sequence("user_group_mapping_id_seq")))
    op.execute(DropSequence(Sequence("friends_id_seq")))
    op.execute(DropSequence(Sequence("users_id_seq")))
    op.execute(DropSequence(Sequence("merchant_id_seq")))
    op.execute(DropSequence(Sequence("groups_id_seq")))
    # ### end Alembic commands ###
